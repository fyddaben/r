function initVertexBuffers(e){var t=new Float32Array([0,.5,-.5,-.5,.5,-.5]),r=3,o=e.createBuffer();if(!o)return console.log("Failed to create the buffer object"),-1;e.bindBuffer(e.ARRAY_BUFFER,o),e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW);var a=e.getAttribLocation(e.program,"a_Position");return e.vertexAttribPointer(a,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(a),r}function main(){var e=document.getElementById("webgl"),t=getWebGLContext(e);if(!t)return void console.log("Failed to get the rendering context fo WebGl");var r=$("#vsh_tmpl").html(),o=$("#fsh_tmpl").html();if(!initShaders(t,r,o))return void console.log("Failed to initialize shaders");var a=Math.PI*ANGLE/180,i=Math.cos(a),n=Math.sin(a),f=new Float32Array([i,n,0,0,-n,i,0,0,0,0,1,0,0,0,0,1]),l=t.getUniformLocation(t.program,"u_xformMatrix");t.uniformMatrix4fv(l,!1,f),t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT);var c=initVertexBuffers(t);return 0>c?(console.log("Failed to create the buffer object"),-1):void t.drawArrays(t.TRIANGLES,0,c)}var ANGLE=90;$(function(){main()});